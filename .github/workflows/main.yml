# Read more about setting it up
# https://medium.com/@ljmocic/deploying-react-application-to-aws-s3-using-github-actions-85addacaeace

name: Deploy Django app
on:
  # Trigger the workflow on push or pull request,
  # but only for the master branch

  push:
    branches: [ main ]
  #pull_request:
  #  branches: [ main ]

jobs:
  deploy:
    name: Build phase
    runs-on: ubuntu-latest
    steps:
      - name: Clone repository
        id: clone-repository
        uses: actions/checkout@main
      - name: Push to server
        uses: docker://evaneos/ssh-action:0.1.0
        # env:
        #   RDS_LOGIN_DB: "postgres"
        #   RDS_HOST: "db"
        #   RDS_USER: "admin"
        #   RDS_PASSWORD: "admin"
        #   RDS_DATABASE: "chatBackend"
        #   RDS_PORT:  "5432"
        #   PGADMIN_DEFAULT_EMAIL: "user@domain.com"
        #   PGADMIN_DEFAULT_PASSWORD: "SuperSecret"
        with: 
          hosts: ${{ secrets.SERVER_IP }}
          user: ${{ secrets.SERVER_USERNAME }}
          private_key: ${{ secrets.KEY }}
          # passphrase: ${{ secrets.PASSPHRASE }} 
          # envs: RDS_LOGIN_DB,RDS_HOST,RDS_USER, RDS_PASSWORD,RDS_DATABASE,RDS_PORT,PGADMIN_DEFAULT_EMAIL,PGADMIN_DEFAULT_PASSWORD
          # script: cd ${{ secrets.PROJECT_PATH }} && git pull && docker-compose -f "docker-compose.yml" up -d --build
          commands: |     
              export RDS_LOGIN_DB=${{ secrets.RDS_LOGIN_DB }}
              export RDS_HOST=${{ secrets.RDS_HOST }}
              export RDS_PASSWORD=${{ secrets.RDS_PASSWORD}}
              export RDS_USER=${{ secrets.RDS_USER }}
              export RDS_DATABASE=${{ secrets.RDS_DATABASE }}
              export RDS_PORT=${{ secrets.RDS_PORT }}
              export PGADMIN_DEFAULT_EMAIL=${{ secrets.PGADMIN_DEFAULT_EMAIL }}
              export PGADMIN_DEFAULT_PASSWORD=${{ secrets.PGADMIN_DEFAULT_PASSWORD }}
              cd ${{ secrets.PROJECT_PATH }} && git pull && docker-compose -f "docker-compose.yml" up -d --build      
      # - name: Stop containers
      #   if: always()
      #   run: cd ${{ secrets.PROJECT_PATH }} && docker-compose -f "docker-compose.yml" down
      # - name: Start containers
      #   run: cd ${{ secrets.PROJECT_PATH }} && docker-compose -f "docker-compose.yml" up -d --build
